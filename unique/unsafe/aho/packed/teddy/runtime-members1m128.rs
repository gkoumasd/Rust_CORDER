# [doc = " Return a candidate for Slim 128-bit Teddy, where `chunk` corresponds to a"] # [doc = " 16-byte window of the haystack (where the least significant byte"] # [doc = " corresponds to the start of the window), and `mask1` corresponds to a"] # [doc = " low/high mask for the first byte of all patterns that are being searched."] # [target_feature (enable = "ssse3")] fn members1m128 (chunk : __m128i , mask1 : Mask128) -> __m128i { let lomask = _mm_set1_epi8 (0xF) ; let hlo = _mm_and_si128 (chunk , lomask) ; let hhi = _mm_and_si128 (_mm_srli_epi16 (chunk , 4) , lomask) ; _mm_and_si128 (_mm_shuffle_epi8 (mask1 . lo , hlo) , _mm_shuffle_epi8 (mask1 . hi , hhi) ,) }
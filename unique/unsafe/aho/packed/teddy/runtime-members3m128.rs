# [doc = " Return candidates for Slim 128-bit Teddy, where `chunk` corresponds"] # [doc = " to a 16-byte window of the haystack (where the least significant byte"] # [doc = " corresponds to the start of the window), and the masks correspond to a"] # [doc = " low/high mask for the first, second and third bytes of all patterns that"] # [doc = " are being searched. The vectors returned correspond to candidates for the"] # [doc = " first, second and third bytes in the patterns represented by the masks."] # [target_feature (enable = "ssse3")] fn members3m128 (chunk : __m128i , mask1 : Mask128 , mask2 : Mask128 , mask3 : Mask128 ,) -> (__m128i , __m128i , __m128i) { let lomask = _mm_set1_epi8 (0xF) ; let hlo = _mm_and_si128 (chunk , lomask) ; let hhi = _mm_and_si128 (_mm_srli_epi16 (chunk , 4) , lomask) ; let res0 = _mm_and_si128 (_mm_shuffle_epi8 (mask1 . lo , hlo) , _mm_shuffle_epi8 (mask1 . hi , hhi) ,) ; let res1 = _mm_and_si128 (_mm_shuffle_epi8 (mask2 . lo , hlo) , _mm_shuffle_epi8 (mask2 . hi , hhi) ,) ; let res2 = _mm_and_si128 (_mm_shuffle_epi8 (mask3 . lo , hlo) , _mm_shuffle_epi8 (mask3 . hi , hhi) ,) ; (res0 , res1 , res2) }